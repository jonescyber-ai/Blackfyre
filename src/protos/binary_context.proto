// See README.txt for information and build instructions.
//
// Note: START and END tags are used in comments to define sections used in
// tutorials.  They are not part of the syntax for Protocol Buffers.
//
// To get an in-depth walkthrough of this file and the related examples, see:
// https://developers.google.com/protocol-buffers/docs/tutorials

// [START declaration]
syntax = "proto3";
package blackfyre.protobuf;
import "pe_header.proto";
// [END declaration]


// [START messages]

message BinaryContext {

  string name = 1;

  string sha256_hash = 2;

  uint32 proc_type = 3; // (e.g. x86 vs ARM)

  uint32 file_type = 4; // (e.g. ELF vs PE)

  uint32 word_size =5;  // (e.g. 32-bit vs 64-bit)

  uint32 endness = 6;  //(e.g. Big endian vs little endian)

  repeated ImportSymbol import_symbol_list = 7;

  map<uint64, string> string_refs = 8; // Key ==> address of where string referenced; value => string

  string language_id = 9;  // Disassembler  language id (e.g. Ghidra --> "ARM:LE:64:v7")

  uint32 total_functions = 10;

  uint32 disassembler_type = 11; // e.g. Ghidra, Binary, or Binary Ninja

  //Note: See https://stackoverflow.com/questions/38886789/protobuf3-how-to-describe-map-of-repeated-string

  map<uint64, ListOfCallers> callee_to_callers_map =12; // The Caller:  key--> target function address; value --> list of  callers

  map<uint64, ListOfCallees> caller_to_callees_map =13; // The Callee:  key--> target function address; value --> list of  callees

  oneof header
  {
    PEHeader pe_header = 14;
  }

  map<uint64, DefinedData> defined_data_map = 15;

  uint64 total_instructions = 16;

  float container_version = 17 [deprecated = true];   // [Deprecated] Version of the binary context container

  repeated ExportSymbol export_symbol_list = 18; // List of exported symbols

  uint64 file_size = 19; // Size of the binary file

  string bcc_version = 20; // Version of the Binary Context Container

  string disassembler_version = 21; // Version of the disassembler used to generate the binary context

}

message ImportSymbol {

    string import_name=1;

    string library_name=2;

    uint64 address=3;
}

message ListOfCallers{

  repeated uint64  callers = 1;
}

message ListOfCallees{

  repeated uint64  callees = 1;
}

message DefinedData {

  uint64 address = 1;

  bytes data_bytes=2;

  uint32 data_type=3;

  repeated uint64 references =4;

  uint32 length=5;

}

message ExportSymbol {

    string export_name=1;

    string library_name=2;

    uint64 address=3;
}



// [END messages]