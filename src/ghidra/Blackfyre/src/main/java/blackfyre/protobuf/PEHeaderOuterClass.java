// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pe_header.proto

// Protobuf Java Version: 3.25.1
package blackfyre.protobuf;

public final class PEHeaderOuterClass {
  private PEHeaderOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PEHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:blackfyre.protobuf.PEHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 time_stamp = 1;</code>
     * @return The timeStamp.
     */
    long getTimeStamp();

    /**
     * <code>uint64 size_of_image = 2;</code>
     * @return The sizeOfImage.
     */
    long getSizeOfImage();

    /**
     * <code>uint64 address_of_entry_point = 3;</code>
     * @return The addressOfEntryPoint.
     */
    long getAddressOfEntryPoint();

    /**
     * <code>uint64 size_of_initialized_data = 4;</code>
     * @return The sizeOfInitializedData.
     */
    long getSizeOfInitializedData();

    /**
     * <code>uint64 size_of_code = 5;</code>
     * @return The sizeOfCode.
     */
    long getSizeOfCode();

    /**
     * <code>uint64 size_of_raw_data = 6;</code>
     * @return The sizeOfRawData.
     */
    long getSizeOfRawData();

    /**
     * <code>uint64 checksum = 7;</code>
     * @return The checksum.
     */
    long getChecksum();

    /**
     * <code>uint64 dll_characteristics = 8;</code>
     * @return The dllCharacteristics.
     */
    long getDllCharacteristics();

    /**
     * <code>uint64 number_of_sections = 9;</code>
     * @return The numberOfSections.
     */
    long getNumberOfSections();

    /**
     * <code>uint64 major_linker_version = 10;</code>
     * @return The majorLinkerVersion.
     */
    long getMajorLinkerVersion();

    /**
     * <code>uint64 major_image_version = 11;</code>
     * @return The majorImageVersion.
     */
    long getMajorImageVersion();

    /**
     * <code>uint64 size_of_uninitialized_data = 12;</code>
     * @return The sizeOfUninitializedData.
     */
    long getSizeOfUninitializedData();

    /**
     * <code>uint64 base_of_code = 13;</code>
     * @return The baseOfCode.
     */
    long getBaseOfCode();

    /**
     * <code>uint64 minor_linker_version = 14;</code>
     * @return The minorLinkerVersion.
     */
    long getMinorLinkerVersion();

    /**
     * <code>uint64 size_of_headers = 15;</code>
     * @return The sizeOfHeaders.
     */
    long getSizeOfHeaders();

    /**
     * <code>uint64 major_operating_system_version = 16;</code>
     * @return The majorOperatingSystemVersion.
     */
    long getMajorOperatingSystemVersion();

    /**
     * <code>uint64 size_of_stack_reserve = 17;</code>
     * @return The sizeOfStackReserve.
     */
    long getSizeOfStackReserve();

    /**
     * <code>uint64 file_alignment = 18;</code>
     * @return The fileAlignment.
     */
    long getFileAlignment();

    /**
     * <code>uint64 minor_image_version = 19;</code>
     * @return The minorImageVersion.
     */
    long getMinorImageVersion();

    /**
     * <code>uint64 major_subsystem_version = 20;</code>
     * @return The majorSubsystemVersion.
     */
    long getMajorSubsystemVersion();

    /**
     * <code>uint64 size_of_stack_commit = 21;</code>
     * @return The sizeOfStackCommit.
     */
    long getSizeOfStackCommit();

    /**
     * <code>uint64 size_of_heap_reserve = 22;</code>
     * @return The sizeOfHeapReserve.
     */
    long getSizeOfHeapReserve();

    /**
     * <code>string nt_header_name = 23;</code>
     * @return The ntHeaderName.
     */
    java.lang.String getNtHeaderName();
    /**
     * <code>string nt_header_name = 23;</code>
     * @return The bytes for ntHeaderName.
     */
    com.google.protobuf.ByteString
        getNtHeaderNameBytes();
  }
  /**
   * Protobuf type {@code blackfyre.protobuf.PEHeader}
   */
  public static final class PEHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:blackfyre.protobuf.PEHeader)
      PEHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PEHeader.newBuilder() to construct.
    private PEHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PEHeader() {
      ntHeaderName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PEHeader();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return blackfyre.protobuf.PEHeaderOuterClass.internal_static_blackfyre_protobuf_PEHeader_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return blackfyre.protobuf.PEHeaderOuterClass.internal_static_blackfyre_protobuf_PEHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              blackfyre.protobuf.PEHeaderOuterClass.PEHeader.class, blackfyre.protobuf.PEHeaderOuterClass.PEHeader.Builder.class);
    }

    public static final int TIME_STAMP_FIELD_NUMBER = 1;
    private long timeStamp_ = 0L;
    /**
     * <code>uint64 time_stamp = 1;</code>
     * @return The timeStamp.
     */
    @java.lang.Override
    public long getTimeStamp() {
      return timeStamp_;
    }

    public static final int SIZE_OF_IMAGE_FIELD_NUMBER = 2;
    private long sizeOfImage_ = 0L;
    /**
     * <code>uint64 size_of_image = 2;</code>
     * @return The sizeOfImage.
     */
    @java.lang.Override
    public long getSizeOfImage() {
      return sizeOfImage_;
    }

    public static final int ADDRESS_OF_ENTRY_POINT_FIELD_NUMBER = 3;
    private long addressOfEntryPoint_ = 0L;
    /**
     * <code>uint64 address_of_entry_point = 3;</code>
     * @return The addressOfEntryPoint.
     */
    @java.lang.Override
    public long getAddressOfEntryPoint() {
      return addressOfEntryPoint_;
    }

    public static final int SIZE_OF_INITIALIZED_DATA_FIELD_NUMBER = 4;
    private long sizeOfInitializedData_ = 0L;
    /**
     * <code>uint64 size_of_initialized_data = 4;</code>
     * @return The sizeOfInitializedData.
     */
    @java.lang.Override
    public long getSizeOfInitializedData() {
      return sizeOfInitializedData_;
    }

    public static final int SIZE_OF_CODE_FIELD_NUMBER = 5;
    private long sizeOfCode_ = 0L;
    /**
     * <code>uint64 size_of_code = 5;</code>
     * @return The sizeOfCode.
     */
    @java.lang.Override
    public long getSizeOfCode() {
      return sizeOfCode_;
    }

    public static final int SIZE_OF_RAW_DATA_FIELD_NUMBER = 6;
    private long sizeOfRawData_ = 0L;
    /**
     * <code>uint64 size_of_raw_data = 6;</code>
     * @return The sizeOfRawData.
     */
    @java.lang.Override
    public long getSizeOfRawData() {
      return sizeOfRawData_;
    }

    public static final int CHECKSUM_FIELD_NUMBER = 7;
    private long checksum_ = 0L;
    /**
     * <code>uint64 checksum = 7;</code>
     * @return The checksum.
     */
    @java.lang.Override
    public long getChecksum() {
      return checksum_;
    }

    public static final int DLL_CHARACTERISTICS_FIELD_NUMBER = 8;
    private long dllCharacteristics_ = 0L;
    /**
     * <code>uint64 dll_characteristics = 8;</code>
     * @return The dllCharacteristics.
     */
    @java.lang.Override
    public long getDllCharacteristics() {
      return dllCharacteristics_;
    }

    public static final int NUMBER_OF_SECTIONS_FIELD_NUMBER = 9;
    private long numberOfSections_ = 0L;
    /**
     * <code>uint64 number_of_sections = 9;</code>
     * @return The numberOfSections.
     */
    @java.lang.Override
    public long getNumberOfSections() {
      return numberOfSections_;
    }

    public static final int MAJOR_LINKER_VERSION_FIELD_NUMBER = 10;
    private long majorLinkerVersion_ = 0L;
    /**
     * <code>uint64 major_linker_version = 10;</code>
     * @return The majorLinkerVersion.
     */
    @java.lang.Override
    public long getMajorLinkerVersion() {
      return majorLinkerVersion_;
    }

    public static final int MAJOR_IMAGE_VERSION_FIELD_NUMBER = 11;
    private long majorImageVersion_ = 0L;
    /**
     * <code>uint64 major_image_version = 11;</code>
     * @return The majorImageVersion.
     */
    @java.lang.Override
    public long getMajorImageVersion() {
      return majorImageVersion_;
    }

    public static final int SIZE_OF_UNINITIALIZED_DATA_FIELD_NUMBER = 12;
    private long sizeOfUninitializedData_ = 0L;
    /**
     * <code>uint64 size_of_uninitialized_data = 12;</code>
     * @return The sizeOfUninitializedData.
     */
    @java.lang.Override
    public long getSizeOfUninitializedData() {
      return sizeOfUninitializedData_;
    }

    public static final int BASE_OF_CODE_FIELD_NUMBER = 13;
    private long baseOfCode_ = 0L;
    /**
     * <code>uint64 base_of_code = 13;</code>
     * @return The baseOfCode.
     */
    @java.lang.Override
    public long getBaseOfCode() {
      return baseOfCode_;
    }

    public static final int MINOR_LINKER_VERSION_FIELD_NUMBER = 14;
    private long minorLinkerVersion_ = 0L;
    /**
     * <code>uint64 minor_linker_version = 14;</code>
     * @return The minorLinkerVersion.
     */
    @java.lang.Override
    public long getMinorLinkerVersion() {
      return minorLinkerVersion_;
    }

    public static final int SIZE_OF_HEADERS_FIELD_NUMBER = 15;
    private long sizeOfHeaders_ = 0L;
    /**
     * <code>uint64 size_of_headers = 15;</code>
     * @return The sizeOfHeaders.
     */
    @java.lang.Override
    public long getSizeOfHeaders() {
      return sizeOfHeaders_;
    }

    public static final int MAJOR_OPERATING_SYSTEM_VERSION_FIELD_NUMBER = 16;
    private long majorOperatingSystemVersion_ = 0L;
    /**
     * <code>uint64 major_operating_system_version = 16;</code>
     * @return The majorOperatingSystemVersion.
     */
    @java.lang.Override
    public long getMajorOperatingSystemVersion() {
      return majorOperatingSystemVersion_;
    }

    public static final int SIZE_OF_STACK_RESERVE_FIELD_NUMBER = 17;
    private long sizeOfStackReserve_ = 0L;
    /**
     * <code>uint64 size_of_stack_reserve = 17;</code>
     * @return The sizeOfStackReserve.
     */
    @java.lang.Override
    public long getSizeOfStackReserve() {
      return sizeOfStackReserve_;
    }

    public static final int FILE_ALIGNMENT_FIELD_NUMBER = 18;
    private long fileAlignment_ = 0L;
    /**
     * <code>uint64 file_alignment = 18;</code>
     * @return The fileAlignment.
     */
    @java.lang.Override
    public long getFileAlignment() {
      return fileAlignment_;
    }

    public static final int MINOR_IMAGE_VERSION_FIELD_NUMBER = 19;
    private long minorImageVersion_ = 0L;
    /**
     * <code>uint64 minor_image_version = 19;</code>
     * @return The minorImageVersion.
     */
    @java.lang.Override
    public long getMinorImageVersion() {
      return minorImageVersion_;
    }

    public static final int MAJOR_SUBSYSTEM_VERSION_FIELD_NUMBER = 20;
    private long majorSubsystemVersion_ = 0L;
    /**
     * <code>uint64 major_subsystem_version = 20;</code>
     * @return The majorSubsystemVersion.
     */
    @java.lang.Override
    public long getMajorSubsystemVersion() {
      return majorSubsystemVersion_;
    }

    public static final int SIZE_OF_STACK_COMMIT_FIELD_NUMBER = 21;
    private long sizeOfStackCommit_ = 0L;
    /**
     * <code>uint64 size_of_stack_commit = 21;</code>
     * @return The sizeOfStackCommit.
     */
    @java.lang.Override
    public long getSizeOfStackCommit() {
      return sizeOfStackCommit_;
    }

    public static final int SIZE_OF_HEAP_RESERVE_FIELD_NUMBER = 22;
    private long sizeOfHeapReserve_ = 0L;
    /**
     * <code>uint64 size_of_heap_reserve = 22;</code>
     * @return The sizeOfHeapReserve.
     */
    @java.lang.Override
    public long getSizeOfHeapReserve() {
      return sizeOfHeapReserve_;
    }

    public static final int NT_HEADER_NAME_FIELD_NUMBER = 23;
    @SuppressWarnings("serial")
    private volatile java.lang.Object ntHeaderName_ = "";
    /**
     * <code>string nt_header_name = 23;</code>
     * @return The ntHeaderName.
     */
    @java.lang.Override
    public java.lang.String getNtHeaderName() {
      java.lang.Object ref = ntHeaderName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ntHeaderName_ = s;
        return s;
      }
    }
    /**
     * <code>string nt_header_name = 23;</code>
     * @return The bytes for ntHeaderName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNtHeaderNameBytes() {
      java.lang.Object ref = ntHeaderName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ntHeaderName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timeStamp_ != 0L) {
        output.writeUInt64(1, timeStamp_);
      }
      if (sizeOfImage_ != 0L) {
        output.writeUInt64(2, sizeOfImage_);
      }
      if (addressOfEntryPoint_ != 0L) {
        output.writeUInt64(3, addressOfEntryPoint_);
      }
      if (sizeOfInitializedData_ != 0L) {
        output.writeUInt64(4, sizeOfInitializedData_);
      }
      if (sizeOfCode_ != 0L) {
        output.writeUInt64(5, sizeOfCode_);
      }
      if (sizeOfRawData_ != 0L) {
        output.writeUInt64(6, sizeOfRawData_);
      }
      if (checksum_ != 0L) {
        output.writeUInt64(7, checksum_);
      }
      if (dllCharacteristics_ != 0L) {
        output.writeUInt64(8, dllCharacteristics_);
      }
      if (numberOfSections_ != 0L) {
        output.writeUInt64(9, numberOfSections_);
      }
      if (majorLinkerVersion_ != 0L) {
        output.writeUInt64(10, majorLinkerVersion_);
      }
      if (majorImageVersion_ != 0L) {
        output.writeUInt64(11, majorImageVersion_);
      }
      if (sizeOfUninitializedData_ != 0L) {
        output.writeUInt64(12, sizeOfUninitializedData_);
      }
      if (baseOfCode_ != 0L) {
        output.writeUInt64(13, baseOfCode_);
      }
      if (minorLinkerVersion_ != 0L) {
        output.writeUInt64(14, minorLinkerVersion_);
      }
      if (sizeOfHeaders_ != 0L) {
        output.writeUInt64(15, sizeOfHeaders_);
      }
      if (majorOperatingSystemVersion_ != 0L) {
        output.writeUInt64(16, majorOperatingSystemVersion_);
      }
      if (sizeOfStackReserve_ != 0L) {
        output.writeUInt64(17, sizeOfStackReserve_);
      }
      if (fileAlignment_ != 0L) {
        output.writeUInt64(18, fileAlignment_);
      }
      if (minorImageVersion_ != 0L) {
        output.writeUInt64(19, minorImageVersion_);
      }
      if (majorSubsystemVersion_ != 0L) {
        output.writeUInt64(20, majorSubsystemVersion_);
      }
      if (sizeOfStackCommit_ != 0L) {
        output.writeUInt64(21, sizeOfStackCommit_);
      }
      if (sizeOfHeapReserve_ != 0L) {
        output.writeUInt64(22, sizeOfHeapReserve_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ntHeaderName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 23, ntHeaderName_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timeStamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, timeStamp_);
      }
      if (sizeOfImage_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, sizeOfImage_);
      }
      if (addressOfEntryPoint_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, addressOfEntryPoint_);
      }
      if (sizeOfInitializedData_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, sizeOfInitializedData_);
      }
      if (sizeOfCode_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, sizeOfCode_);
      }
      if (sizeOfRawData_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, sizeOfRawData_);
      }
      if (checksum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, checksum_);
      }
      if (dllCharacteristics_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, dllCharacteristics_);
      }
      if (numberOfSections_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, numberOfSections_);
      }
      if (majorLinkerVersion_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, majorLinkerVersion_);
      }
      if (majorImageVersion_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, majorImageVersion_);
      }
      if (sizeOfUninitializedData_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, sizeOfUninitializedData_);
      }
      if (baseOfCode_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, baseOfCode_);
      }
      if (minorLinkerVersion_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(14, minorLinkerVersion_);
      }
      if (sizeOfHeaders_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(15, sizeOfHeaders_);
      }
      if (majorOperatingSystemVersion_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, majorOperatingSystemVersion_);
      }
      if (sizeOfStackReserve_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(17, sizeOfStackReserve_);
      }
      if (fileAlignment_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(18, fileAlignment_);
      }
      if (minorImageVersion_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(19, minorImageVersion_);
      }
      if (majorSubsystemVersion_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(20, majorSubsystemVersion_);
      }
      if (sizeOfStackCommit_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(21, sizeOfStackCommit_);
      }
      if (sizeOfHeapReserve_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(22, sizeOfHeapReserve_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ntHeaderName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, ntHeaderName_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof blackfyre.protobuf.PEHeaderOuterClass.PEHeader)) {
        return super.equals(obj);
      }
      blackfyre.protobuf.PEHeaderOuterClass.PEHeader other = (blackfyre.protobuf.PEHeaderOuterClass.PEHeader) obj;

      if (getTimeStamp()
          != other.getTimeStamp()) return false;
      if (getSizeOfImage()
          != other.getSizeOfImage()) return false;
      if (getAddressOfEntryPoint()
          != other.getAddressOfEntryPoint()) return false;
      if (getSizeOfInitializedData()
          != other.getSizeOfInitializedData()) return false;
      if (getSizeOfCode()
          != other.getSizeOfCode()) return false;
      if (getSizeOfRawData()
          != other.getSizeOfRawData()) return false;
      if (getChecksum()
          != other.getChecksum()) return false;
      if (getDllCharacteristics()
          != other.getDllCharacteristics()) return false;
      if (getNumberOfSections()
          != other.getNumberOfSections()) return false;
      if (getMajorLinkerVersion()
          != other.getMajorLinkerVersion()) return false;
      if (getMajorImageVersion()
          != other.getMajorImageVersion()) return false;
      if (getSizeOfUninitializedData()
          != other.getSizeOfUninitializedData()) return false;
      if (getBaseOfCode()
          != other.getBaseOfCode()) return false;
      if (getMinorLinkerVersion()
          != other.getMinorLinkerVersion()) return false;
      if (getSizeOfHeaders()
          != other.getSizeOfHeaders()) return false;
      if (getMajorOperatingSystemVersion()
          != other.getMajorOperatingSystemVersion()) return false;
      if (getSizeOfStackReserve()
          != other.getSizeOfStackReserve()) return false;
      if (getFileAlignment()
          != other.getFileAlignment()) return false;
      if (getMinorImageVersion()
          != other.getMinorImageVersion()) return false;
      if (getMajorSubsystemVersion()
          != other.getMajorSubsystemVersion()) return false;
      if (getSizeOfStackCommit()
          != other.getSizeOfStackCommit()) return false;
      if (getSizeOfHeapReserve()
          != other.getSizeOfHeapReserve()) return false;
      if (!getNtHeaderName()
          .equals(other.getNtHeaderName())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_STAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeStamp());
      hash = (37 * hash) + SIZE_OF_IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfImage());
      hash = (37 * hash) + ADDRESS_OF_ENTRY_POINT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAddressOfEntryPoint());
      hash = (37 * hash) + SIZE_OF_INITIALIZED_DATA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfInitializedData());
      hash = (37 * hash) + SIZE_OF_CODE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfCode());
      hash = (37 * hash) + SIZE_OF_RAW_DATA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfRawData());
      hash = (37 * hash) + CHECKSUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChecksum());
      hash = (37 * hash) + DLL_CHARACTERISTICS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDllCharacteristics());
      hash = (37 * hash) + NUMBER_OF_SECTIONS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumberOfSections());
      hash = (37 * hash) + MAJOR_LINKER_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMajorLinkerVersion());
      hash = (37 * hash) + MAJOR_IMAGE_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMajorImageVersion());
      hash = (37 * hash) + SIZE_OF_UNINITIALIZED_DATA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfUninitializedData());
      hash = (37 * hash) + BASE_OF_CODE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBaseOfCode());
      hash = (37 * hash) + MINOR_LINKER_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMinorLinkerVersion());
      hash = (37 * hash) + SIZE_OF_HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfHeaders());
      hash = (37 * hash) + MAJOR_OPERATING_SYSTEM_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMajorOperatingSystemVersion());
      hash = (37 * hash) + SIZE_OF_STACK_RESERVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfStackReserve());
      hash = (37 * hash) + FILE_ALIGNMENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFileAlignment());
      hash = (37 * hash) + MINOR_IMAGE_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMinorImageVersion());
      hash = (37 * hash) + MAJOR_SUBSYSTEM_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMajorSubsystemVersion());
      hash = (37 * hash) + SIZE_OF_STACK_COMMIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfStackCommit());
      hash = (37 * hash) + SIZE_OF_HEAP_RESERVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfHeapReserve());
      hash = (37 * hash) + NT_HEADER_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getNtHeaderName().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(blackfyre.protobuf.PEHeaderOuterClass.PEHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code blackfyre.protobuf.PEHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:blackfyre.protobuf.PEHeader)
        blackfyre.protobuf.PEHeaderOuterClass.PEHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return blackfyre.protobuf.PEHeaderOuterClass.internal_static_blackfyre_protobuf_PEHeader_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return blackfyre.protobuf.PEHeaderOuterClass.internal_static_blackfyre_protobuf_PEHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                blackfyre.protobuf.PEHeaderOuterClass.PEHeader.class, blackfyre.protobuf.PEHeaderOuterClass.PEHeader.Builder.class);
      }

      // Construct using blackfyre.protobuf.PEHeaderOuterClass.PEHeader.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        timeStamp_ = 0L;
        sizeOfImage_ = 0L;
        addressOfEntryPoint_ = 0L;
        sizeOfInitializedData_ = 0L;
        sizeOfCode_ = 0L;
        sizeOfRawData_ = 0L;
        checksum_ = 0L;
        dllCharacteristics_ = 0L;
        numberOfSections_ = 0L;
        majorLinkerVersion_ = 0L;
        majorImageVersion_ = 0L;
        sizeOfUninitializedData_ = 0L;
        baseOfCode_ = 0L;
        minorLinkerVersion_ = 0L;
        sizeOfHeaders_ = 0L;
        majorOperatingSystemVersion_ = 0L;
        sizeOfStackReserve_ = 0L;
        fileAlignment_ = 0L;
        minorImageVersion_ = 0L;
        majorSubsystemVersion_ = 0L;
        sizeOfStackCommit_ = 0L;
        sizeOfHeapReserve_ = 0L;
        ntHeaderName_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return blackfyre.protobuf.PEHeaderOuterClass.internal_static_blackfyre_protobuf_PEHeader_descriptor;
      }

      @java.lang.Override
      public blackfyre.protobuf.PEHeaderOuterClass.PEHeader getDefaultInstanceForType() {
        return blackfyre.protobuf.PEHeaderOuterClass.PEHeader.getDefaultInstance();
      }

      @java.lang.Override
      public blackfyre.protobuf.PEHeaderOuterClass.PEHeader build() {
        blackfyre.protobuf.PEHeaderOuterClass.PEHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public blackfyre.protobuf.PEHeaderOuterClass.PEHeader buildPartial() {
        blackfyre.protobuf.PEHeaderOuterClass.PEHeader result = new blackfyre.protobuf.PEHeaderOuterClass.PEHeader(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(blackfyre.protobuf.PEHeaderOuterClass.PEHeader result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timeStamp_ = timeStamp_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sizeOfImage_ = sizeOfImage_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.addressOfEntryPoint_ = addressOfEntryPoint_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.sizeOfInitializedData_ = sizeOfInitializedData_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.sizeOfCode_ = sizeOfCode_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.sizeOfRawData_ = sizeOfRawData_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.checksum_ = checksum_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.dllCharacteristics_ = dllCharacteristics_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.numberOfSections_ = numberOfSections_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.majorLinkerVersion_ = majorLinkerVersion_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.majorImageVersion_ = majorImageVersion_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.sizeOfUninitializedData_ = sizeOfUninitializedData_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.baseOfCode_ = baseOfCode_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.minorLinkerVersion_ = minorLinkerVersion_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.sizeOfHeaders_ = sizeOfHeaders_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.majorOperatingSystemVersion_ = majorOperatingSystemVersion_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.sizeOfStackReserve_ = sizeOfStackReserve_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.fileAlignment_ = fileAlignment_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.minorImageVersion_ = minorImageVersion_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.majorSubsystemVersion_ = majorSubsystemVersion_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.sizeOfStackCommit_ = sizeOfStackCommit_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.sizeOfHeapReserve_ = sizeOfHeapReserve_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.ntHeaderName_ = ntHeaderName_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof blackfyre.protobuf.PEHeaderOuterClass.PEHeader) {
          return mergeFrom((blackfyre.protobuf.PEHeaderOuterClass.PEHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(blackfyre.protobuf.PEHeaderOuterClass.PEHeader other) {
        if (other == blackfyre.protobuf.PEHeaderOuterClass.PEHeader.getDefaultInstance()) return this;
        if (other.getTimeStamp() != 0L) {
          setTimeStamp(other.getTimeStamp());
        }
        if (other.getSizeOfImage() != 0L) {
          setSizeOfImage(other.getSizeOfImage());
        }
        if (other.getAddressOfEntryPoint() != 0L) {
          setAddressOfEntryPoint(other.getAddressOfEntryPoint());
        }
        if (other.getSizeOfInitializedData() != 0L) {
          setSizeOfInitializedData(other.getSizeOfInitializedData());
        }
        if (other.getSizeOfCode() != 0L) {
          setSizeOfCode(other.getSizeOfCode());
        }
        if (other.getSizeOfRawData() != 0L) {
          setSizeOfRawData(other.getSizeOfRawData());
        }
        if (other.getChecksum() != 0L) {
          setChecksum(other.getChecksum());
        }
        if (other.getDllCharacteristics() != 0L) {
          setDllCharacteristics(other.getDllCharacteristics());
        }
        if (other.getNumberOfSections() != 0L) {
          setNumberOfSections(other.getNumberOfSections());
        }
        if (other.getMajorLinkerVersion() != 0L) {
          setMajorLinkerVersion(other.getMajorLinkerVersion());
        }
        if (other.getMajorImageVersion() != 0L) {
          setMajorImageVersion(other.getMajorImageVersion());
        }
        if (other.getSizeOfUninitializedData() != 0L) {
          setSizeOfUninitializedData(other.getSizeOfUninitializedData());
        }
        if (other.getBaseOfCode() != 0L) {
          setBaseOfCode(other.getBaseOfCode());
        }
        if (other.getMinorLinkerVersion() != 0L) {
          setMinorLinkerVersion(other.getMinorLinkerVersion());
        }
        if (other.getSizeOfHeaders() != 0L) {
          setSizeOfHeaders(other.getSizeOfHeaders());
        }
        if (other.getMajorOperatingSystemVersion() != 0L) {
          setMajorOperatingSystemVersion(other.getMajorOperatingSystemVersion());
        }
        if (other.getSizeOfStackReserve() != 0L) {
          setSizeOfStackReserve(other.getSizeOfStackReserve());
        }
        if (other.getFileAlignment() != 0L) {
          setFileAlignment(other.getFileAlignment());
        }
        if (other.getMinorImageVersion() != 0L) {
          setMinorImageVersion(other.getMinorImageVersion());
        }
        if (other.getMajorSubsystemVersion() != 0L) {
          setMajorSubsystemVersion(other.getMajorSubsystemVersion());
        }
        if (other.getSizeOfStackCommit() != 0L) {
          setSizeOfStackCommit(other.getSizeOfStackCommit());
        }
        if (other.getSizeOfHeapReserve() != 0L) {
          setSizeOfHeapReserve(other.getSizeOfHeapReserve());
        }
        if (!other.getNtHeaderName().isEmpty()) {
          ntHeaderName_ = other.ntHeaderName_;
          bitField0_ |= 0x00400000;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                timeStamp_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                sizeOfImage_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                addressOfEntryPoint_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                sizeOfInitializedData_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                sizeOfCode_ = input.readUInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                sizeOfRawData_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                checksum_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                dllCharacteristics_ = input.readUInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                numberOfSections_ = input.readUInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                majorLinkerVersion_ = input.readUInt64();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                majorImageVersion_ = input.readUInt64();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                sizeOfUninitializedData_ = input.readUInt64();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                baseOfCode_ = input.readUInt64();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                minorLinkerVersion_ = input.readUInt64();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                sizeOfHeaders_ = input.readUInt64();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                majorOperatingSystemVersion_ = input.readUInt64();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                sizeOfStackReserve_ = input.readUInt64();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 144: {
                fileAlignment_ = input.readUInt64();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 152: {
                minorImageVersion_ = input.readUInt64();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                majorSubsystemVersion_ = input.readUInt64();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 168: {
                sizeOfStackCommit_ = input.readUInt64();
                bitField0_ |= 0x00100000;
                break;
              } // case 168
              case 176: {
                sizeOfHeapReserve_ = input.readUInt64();
                bitField0_ |= 0x00200000;
                break;
              } // case 176
              case 186: {
                ntHeaderName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00400000;
                break;
              } // case 186
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long timeStamp_ ;
      /**
       * <code>uint64 time_stamp = 1;</code>
       * @return The timeStamp.
       */
      @java.lang.Override
      public long getTimeStamp() {
        return timeStamp_;
      }
      /**
       * <code>uint64 time_stamp = 1;</code>
       * @param value The timeStamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimeStamp(long value) {

        timeStamp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 time_stamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeStamp_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfImage_ ;
      /**
       * <code>uint64 size_of_image = 2;</code>
       * @return The sizeOfImage.
       */
      @java.lang.Override
      public long getSizeOfImage() {
        return sizeOfImage_;
      }
      /**
       * <code>uint64 size_of_image = 2;</code>
       * @param value The sizeOfImage to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfImage(long value) {

        sizeOfImage_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 size_of_image = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfImage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sizeOfImage_ = 0L;
        onChanged();
        return this;
      }

      private long addressOfEntryPoint_ ;
      /**
       * <code>uint64 address_of_entry_point = 3;</code>
       * @return The addressOfEntryPoint.
       */
      @java.lang.Override
      public long getAddressOfEntryPoint() {
        return addressOfEntryPoint_;
      }
      /**
       * <code>uint64 address_of_entry_point = 3;</code>
       * @param value The addressOfEntryPoint to set.
       * @return This builder for chaining.
       */
      public Builder setAddressOfEntryPoint(long value) {

        addressOfEntryPoint_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 address_of_entry_point = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddressOfEntryPoint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        addressOfEntryPoint_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfInitializedData_ ;
      /**
       * <code>uint64 size_of_initialized_data = 4;</code>
       * @return The sizeOfInitializedData.
       */
      @java.lang.Override
      public long getSizeOfInitializedData() {
        return sizeOfInitializedData_;
      }
      /**
       * <code>uint64 size_of_initialized_data = 4;</code>
       * @param value The sizeOfInitializedData to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfInitializedData(long value) {

        sizeOfInitializedData_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 size_of_initialized_data = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfInitializedData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sizeOfInitializedData_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfCode_ ;
      /**
       * <code>uint64 size_of_code = 5;</code>
       * @return The sizeOfCode.
       */
      @java.lang.Override
      public long getSizeOfCode() {
        return sizeOfCode_;
      }
      /**
       * <code>uint64 size_of_code = 5;</code>
       * @param value The sizeOfCode to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfCode(long value) {

        sizeOfCode_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 size_of_code = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sizeOfCode_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfRawData_ ;
      /**
       * <code>uint64 size_of_raw_data = 6;</code>
       * @return The sizeOfRawData.
       */
      @java.lang.Override
      public long getSizeOfRawData() {
        return sizeOfRawData_;
      }
      /**
       * <code>uint64 size_of_raw_data = 6;</code>
       * @param value The sizeOfRawData to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfRawData(long value) {

        sizeOfRawData_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 size_of_raw_data = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfRawData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sizeOfRawData_ = 0L;
        onChanged();
        return this;
      }

      private long checksum_ ;
      /**
       * <code>uint64 checksum = 7;</code>
       * @return The checksum.
       */
      @java.lang.Override
      public long getChecksum() {
        return checksum_;
      }
      /**
       * <code>uint64 checksum = 7;</code>
       * @param value The checksum to set.
       * @return This builder for chaining.
       */
      public Builder setChecksum(long value) {

        checksum_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 checksum = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearChecksum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        checksum_ = 0L;
        onChanged();
        return this;
      }

      private long dllCharacteristics_ ;
      /**
       * <code>uint64 dll_characteristics = 8;</code>
       * @return The dllCharacteristics.
       */
      @java.lang.Override
      public long getDllCharacteristics() {
        return dllCharacteristics_;
      }
      /**
       * <code>uint64 dll_characteristics = 8;</code>
       * @param value The dllCharacteristics to set.
       * @return This builder for chaining.
       */
      public Builder setDllCharacteristics(long value) {

        dllCharacteristics_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 dll_characteristics = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDllCharacteristics() {
        bitField0_ = (bitField0_ & ~0x00000080);
        dllCharacteristics_ = 0L;
        onChanged();
        return this;
      }

      private long numberOfSections_ ;
      /**
       * <code>uint64 number_of_sections = 9;</code>
       * @return The numberOfSections.
       */
      @java.lang.Override
      public long getNumberOfSections() {
        return numberOfSections_;
      }
      /**
       * <code>uint64 number_of_sections = 9;</code>
       * @param value The numberOfSections to set.
       * @return This builder for chaining.
       */
      public Builder setNumberOfSections(long value) {

        numberOfSections_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 number_of_sections = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumberOfSections() {
        bitField0_ = (bitField0_ & ~0x00000100);
        numberOfSections_ = 0L;
        onChanged();
        return this;
      }

      private long majorLinkerVersion_ ;
      /**
       * <code>uint64 major_linker_version = 10;</code>
       * @return The majorLinkerVersion.
       */
      @java.lang.Override
      public long getMajorLinkerVersion() {
        return majorLinkerVersion_;
      }
      /**
       * <code>uint64 major_linker_version = 10;</code>
       * @param value The majorLinkerVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMajorLinkerVersion(long value) {

        majorLinkerVersion_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 major_linker_version = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMajorLinkerVersion() {
        bitField0_ = (bitField0_ & ~0x00000200);
        majorLinkerVersion_ = 0L;
        onChanged();
        return this;
      }

      private long majorImageVersion_ ;
      /**
       * <code>uint64 major_image_version = 11;</code>
       * @return The majorImageVersion.
       */
      @java.lang.Override
      public long getMajorImageVersion() {
        return majorImageVersion_;
      }
      /**
       * <code>uint64 major_image_version = 11;</code>
       * @param value The majorImageVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMajorImageVersion(long value) {

        majorImageVersion_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 major_image_version = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMajorImageVersion() {
        bitField0_ = (bitField0_ & ~0x00000400);
        majorImageVersion_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfUninitializedData_ ;
      /**
       * <code>uint64 size_of_uninitialized_data = 12;</code>
       * @return The sizeOfUninitializedData.
       */
      @java.lang.Override
      public long getSizeOfUninitializedData() {
        return sizeOfUninitializedData_;
      }
      /**
       * <code>uint64 size_of_uninitialized_data = 12;</code>
       * @param value The sizeOfUninitializedData to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfUninitializedData(long value) {

        sizeOfUninitializedData_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 size_of_uninitialized_data = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfUninitializedData() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sizeOfUninitializedData_ = 0L;
        onChanged();
        return this;
      }

      private long baseOfCode_ ;
      /**
       * <code>uint64 base_of_code = 13;</code>
       * @return The baseOfCode.
       */
      @java.lang.Override
      public long getBaseOfCode() {
        return baseOfCode_;
      }
      /**
       * <code>uint64 base_of_code = 13;</code>
       * @param value The baseOfCode to set.
       * @return This builder for chaining.
       */
      public Builder setBaseOfCode(long value) {

        baseOfCode_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 base_of_code = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearBaseOfCode() {
        bitField0_ = (bitField0_ & ~0x00001000);
        baseOfCode_ = 0L;
        onChanged();
        return this;
      }

      private long minorLinkerVersion_ ;
      /**
       * <code>uint64 minor_linker_version = 14;</code>
       * @return The minorLinkerVersion.
       */
      @java.lang.Override
      public long getMinorLinkerVersion() {
        return minorLinkerVersion_;
      }
      /**
       * <code>uint64 minor_linker_version = 14;</code>
       * @param value The minorLinkerVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMinorLinkerVersion(long value) {

        minorLinkerVersion_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 minor_linker_version = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinorLinkerVersion() {
        bitField0_ = (bitField0_ & ~0x00002000);
        minorLinkerVersion_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfHeaders_ ;
      /**
       * <code>uint64 size_of_headers = 15;</code>
       * @return The sizeOfHeaders.
       */
      @java.lang.Override
      public long getSizeOfHeaders() {
        return sizeOfHeaders_;
      }
      /**
       * <code>uint64 size_of_headers = 15;</code>
       * @param value The sizeOfHeaders to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfHeaders(long value) {

        sizeOfHeaders_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 size_of_headers = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfHeaders() {
        bitField0_ = (bitField0_ & ~0x00004000);
        sizeOfHeaders_ = 0L;
        onChanged();
        return this;
      }

      private long majorOperatingSystemVersion_ ;
      /**
       * <code>uint64 major_operating_system_version = 16;</code>
       * @return The majorOperatingSystemVersion.
       */
      @java.lang.Override
      public long getMajorOperatingSystemVersion() {
        return majorOperatingSystemVersion_;
      }
      /**
       * <code>uint64 major_operating_system_version = 16;</code>
       * @param value The majorOperatingSystemVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMajorOperatingSystemVersion(long value) {

        majorOperatingSystemVersion_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 major_operating_system_version = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearMajorOperatingSystemVersion() {
        bitField0_ = (bitField0_ & ~0x00008000);
        majorOperatingSystemVersion_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfStackReserve_ ;
      /**
       * <code>uint64 size_of_stack_reserve = 17;</code>
       * @return The sizeOfStackReserve.
       */
      @java.lang.Override
      public long getSizeOfStackReserve() {
        return sizeOfStackReserve_;
      }
      /**
       * <code>uint64 size_of_stack_reserve = 17;</code>
       * @param value The sizeOfStackReserve to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfStackReserve(long value) {

        sizeOfStackReserve_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 size_of_stack_reserve = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfStackReserve() {
        bitField0_ = (bitField0_ & ~0x00010000);
        sizeOfStackReserve_ = 0L;
        onChanged();
        return this;
      }

      private long fileAlignment_ ;
      /**
       * <code>uint64 file_alignment = 18;</code>
       * @return The fileAlignment.
       */
      @java.lang.Override
      public long getFileAlignment() {
        return fileAlignment_;
      }
      /**
       * <code>uint64 file_alignment = 18;</code>
       * @param value The fileAlignment to set.
       * @return This builder for chaining.
       */
      public Builder setFileAlignment(long value) {

        fileAlignment_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 file_alignment = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileAlignment() {
        bitField0_ = (bitField0_ & ~0x00020000);
        fileAlignment_ = 0L;
        onChanged();
        return this;
      }

      private long minorImageVersion_ ;
      /**
       * <code>uint64 minor_image_version = 19;</code>
       * @return The minorImageVersion.
       */
      @java.lang.Override
      public long getMinorImageVersion() {
        return minorImageVersion_;
      }
      /**
       * <code>uint64 minor_image_version = 19;</code>
       * @param value The minorImageVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMinorImageVersion(long value) {

        minorImageVersion_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 minor_image_version = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinorImageVersion() {
        bitField0_ = (bitField0_ & ~0x00040000);
        minorImageVersion_ = 0L;
        onChanged();
        return this;
      }

      private long majorSubsystemVersion_ ;
      /**
       * <code>uint64 major_subsystem_version = 20;</code>
       * @return The majorSubsystemVersion.
       */
      @java.lang.Override
      public long getMajorSubsystemVersion() {
        return majorSubsystemVersion_;
      }
      /**
       * <code>uint64 major_subsystem_version = 20;</code>
       * @param value The majorSubsystemVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMajorSubsystemVersion(long value) {

        majorSubsystemVersion_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 major_subsystem_version = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearMajorSubsystemVersion() {
        bitField0_ = (bitField0_ & ~0x00080000);
        majorSubsystemVersion_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfStackCommit_ ;
      /**
       * <code>uint64 size_of_stack_commit = 21;</code>
       * @return The sizeOfStackCommit.
       */
      @java.lang.Override
      public long getSizeOfStackCommit() {
        return sizeOfStackCommit_;
      }
      /**
       * <code>uint64 size_of_stack_commit = 21;</code>
       * @param value The sizeOfStackCommit to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfStackCommit(long value) {

        sizeOfStackCommit_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 size_of_stack_commit = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfStackCommit() {
        bitField0_ = (bitField0_ & ~0x00100000);
        sizeOfStackCommit_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfHeapReserve_ ;
      /**
       * <code>uint64 size_of_heap_reserve = 22;</code>
       * @return The sizeOfHeapReserve.
       */
      @java.lang.Override
      public long getSizeOfHeapReserve() {
        return sizeOfHeapReserve_;
      }
      /**
       * <code>uint64 size_of_heap_reserve = 22;</code>
       * @param value The sizeOfHeapReserve to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfHeapReserve(long value) {

        sizeOfHeapReserve_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 size_of_heap_reserve = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfHeapReserve() {
        bitField0_ = (bitField0_ & ~0x00200000);
        sizeOfHeapReserve_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object ntHeaderName_ = "";
      /**
       * <code>string nt_header_name = 23;</code>
       * @return The ntHeaderName.
       */
      public java.lang.String getNtHeaderName() {
        java.lang.Object ref = ntHeaderName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ntHeaderName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string nt_header_name = 23;</code>
       * @return The bytes for ntHeaderName.
       */
      public com.google.protobuf.ByteString
          getNtHeaderNameBytes() {
        java.lang.Object ref = ntHeaderName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ntHeaderName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string nt_header_name = 23;</code>
       * @param value The ntHeaderName to set.
       * @return This builder for chaining.
       */
      public Builder setNtHeaderName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ntHeaderName_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>string nt_header_name = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearNtHeaderName() {
        ntHeaderName_ = getDefaultInstance().getNtHeaderName();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }
      /**
       * <code>string nt_header_name = 23;</code>
       * @param value The bytes for ntHeaderName to set.
       * @return This builder for chaining.
       */
      public Builder setNtHeaderNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ntHeaderName_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:blackfyre.protobuf.PEHeader)
    }

    // @@protoc_insertion_point(class_scope:blackfyre.protobuf.PEHeader)
    private static final blackfyre.protobuf.PEHeaderOuterClass.PEHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new blackfyre.protobuf.PEHeaderOuterClass.PEHeader();
    }

    public static blackfyre.protobuf.PEHeaderOuterClass.PEHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PEHeader>
        PARSER = new com.google.protobuf.AbstractParser<PEHeader>() {
      @java.lang.Override
      public PEHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PEHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PEHeader> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public blackfyre.protobuf.PEHeaderOuterClass.PEHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_blackfyre_protobuf_PEHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_blackfyre_protobuf_PEHeader_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017pe_header.proto\022\022blackfyre.protobuf\"\217\005" +
      "\n\010PEHeader\022\022\n\ntime_stamp\030\001 \001(\004\022\025\n\rsize_o" +
      "f_image\030\002 \001(\004\022\036\n\026address_of_entry_point\030" +
      "\003 \001(\004\022 \n\030size_of_initialized_data\030\004 \001(\004\022" +
      "\024\n\014size_of_code\030\005 \001(\004\022\030\n\020size_of_raw_dat" +
      "a\030\006 \001(\004\022\020\n\010checksum\030\007 \001(\004\022\033\n\023dll_charact" +
      "eristics\030\010 \001(\004\022\032\n\022number_of_sections\030\t \001" +
      "(\004\022\034\n\024major_linker_version\030\n \001(\004\022\033\n\023majo" +
      "r_image_version\030\013 \001(\004\022\"\n\032size_of_uniniti" +
      "alized_data\030\014 \001(\004\022\024\n\014base_of_code\030\r \001(\004\022" +
      "\034\n\024minor_linker_version\030\016 \001(\004\022\027\n\017size_of" +
      "_headers\030\017 \001(\004\022&\n\036major_operating_system" +
      "_version\030\020 \001(\004\022\035\n\025size_of_stack_reserve\030" +
      "\021 \001(\004\022\026\n\016file_alignment\030\022 \001(\004\022\033\n\023minor_i" +
      "mage_version\030\023 \001(\004\022\037\n\027major_subsystem_ve" +
      "rsion\030\024 \001(\004\022\034\n\024size_of_stack_commit\030\025 \001(" +
      "\004\022\034\n\024size_of_heap_reserve\030\026 \001(\004\022\026\n\016nt_he" +
      "ader_name\030\027 \001(\tB\024B\022PEHeaderOuterClassb\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_blackfyre_protobuf_PEHeader_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_blackfyre_protobuf_PEHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_blackfyre_protobuf_PEHeader_descriptor,
        new java.lang.String[] { "TimeStamp", "SizeOfImage", "AddressOfEntryPoint", "SizeOfInitializedData", "SizeOfCode", "SizeOfRawData", "Checksum", "DllCharacteristics", "NumberOfSections", "MajorLinkerVersion", "MajorImageVersion", "SizeOfUninitializedData", "BaseOfCode", "MinorLinkerVersion", "SizeOfHeaders", "MajorOperatingSystemVersion", "SizeOfStackReserve", "FileAlignment", "MinorImageVersion", "MajorSubsystemVersion", "SizeOfStackCommit", "SizeOfHeapReserve", "NtHeaderName", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
